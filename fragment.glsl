#version 460 core

vec3 I = vec3(2, 2, 2);          // point light intensity
vec3 Iamb = vec3(0.8, 0.8, 0.8); // ambient light intensity
vec3 kd = vec3(1, 0.2, 0.2);     // diffuse reflectance coefficient
vec3 ka = vec3(0.3, 0.3, 0.3);   // ambient reflectance coefficient
vec3 ks = vec3(0.8, 0.8, 0.8);   // specular reflectance coefficient
vec3 lightPos = vec3(15, 10, 15);   // light position in world coordinates

//uniform vec3 eyePos;

in vec4 fragWorldPosG;
in vec3 fragWorldNorG;
in float maxHeight;

out vec4 fragColor;

void useCustomColorMap(float height);
vec4 getPhongShadedColor();

float rainbow[768] = {
	0.984314, 0, 1,
	0.964706, 0, 1,
	0.945098, 0, 1,
	0.92549, 0, 1,
	0.905882, 0, 1,
	0.886275, 0, 1,
	0.866667, 0, 1,
	0.847059, 0, 1,
	0.827451, 0, 1,
	0.807843, 0, 1,
	0.788235, 0, 1,
	0.768627, 0, 1,
	0.74902, 0, 1,
	0.729412, 0, 1,
	0.709804, 0, 1,
	0.690196, 0, 1,
	0.670588, 0, 1,
	0.65098, 0, 1,
	0.631373, 0, 1,
	0.611765, 0, 1,
	0.592157, 0, 1,
	0.572549, 0, 1,
	0.552941, 0, 1,
	0.533333, 0, 1,
	0.513726, 0, 1,
	0.494118, 0, 1,
	0.47451, 0, 1,
	0.454902, 0, 1,
	0.435294, 0, 1,
	0.415686, 0, 1,
	0.396078, 0, 1,
	0.376471, 0, 1,
	0.356863, 0, 1,
	0.337255, 0, 1,
	0.317647, 0, 1,
	0.298039, 0, 1,
	0.278431, 0, 1,
	0.258824, 0, 1,
	0.239216, 0, 1,
	0.219608, 0, 1,
	0.2, 0, 1,
	0.184314, 0, 1,
	0.164706, 0, 1,
	0.145098, 0, 1,
	0.12549, 0, 1,
	0.105882, 0, 1,
	0.0862745, 0, 1,
	0.0666667, 0, 1,
	0.0470588, 0, 1,
	0.027451, 0, 1,
	0.00784314, 0, 1,
	0, 0.0117647, 1,
	0, 0.0313726, 1,
	0, 0.0509804, 1,
	0, 0.0705882, 1,
	0, 0.0901961, 1,
	0, 0.109804, 1,
	0, 0.129412, 1,
	0, 0.14902, 1,
	0, 0.168627, 1,
	0, 0.188235, 1,
	0, 0.207843, 1,
	0, 0.227451, 1,
	0, 0.247059, 1,
	0, 0.266667, 1,
	0, 0.286275, 1,
	0, 0.305882, 1,
	0, 0.32549, 1,
	0, 0.345098, 1,
	0, 0.364706, 1,
	0, 0.384314, 1,
	0, 0.403922, 1,
	0, 0.423529, 1,
	0, 0.443137, 1,
	0, 0.462745, 1,
	0, 0.482353, 1,
	0, 0.501961, 1,
	0, 0.521569, 1,
	0, 0.541176, 1,
	0, 0.560784, 1,
	0, 0.580392, 1,
	0, 0.6, 1,
	0, 0.619608, 1,
	0, 0.639216, 1,
	0, 0.658824, 1,
	0, 0.678431, 1,
	0, 0.698039, 1,
	0, 0.717647, 1,
	0, 0.737255, 1,
	0, 0.756863, 1,
	0, 0.776471, 1,
	0, 0.796078, 1,
	0, 0.815686, 1,
	0, 0.835294, 1,
	0, 0.854902, 1,
	0, 0.87451, 1,
	0, 0.894118, 1,
	0, 0.913725, 1,
	0, 0.933333, 1,
	0, 0.952941, 1,
	0, 0.972549, 1,
	0, 0.992157, 1,
	0, 1, 0.992157,
	0, 1, 0.972549,
	0, 1, 0.952941,
	0, 1, 0.933333,
	0, 1, 0.913725,
	0, 1, 0.894118,
	0, 1, 0.87451,
	0, 1, 0.854902,
	0, 1, 0.835294,
	0, 1, 0.815686,
	0, 1, 0.796078,
	0, 1, 0.776471,
	0, 1, 0.756863,
	0, 1, 0.737255,
	0, 1, 0.717647,
	0, 1, 0.698039,
	0, 1, 0.678431,
	0, 1, 0.658824,
	0, 1, 0.639216,
	0, 1, 0.619608,
	0, 1, 0.6,
	0, 1, 0.580392,
	0, 1, 0.560784,
	0, 1, 0.541176,
	0, 1, 0.521569,
	0, 1, 0.501961,
	0, 1, 0.482353,
	0, 1, 0.462745,
	0, 1, 0.443137,
	0, 1, 0.423529,
	0, 1, 0.403922,
	0, 1, 0.384314,
	0, 1, 0.364706,
	0, 1, 0.345098,
	0, 1, 0.32549,
	0, 1, 0.305882,
	0, 1, 0.286275,
	0, 1, 0.266667,
	0, 1, 0.247059,
	0, 1, 0.227451,
	0, 1, 0.207843,
	0, 1, 0.188235,
	0, 1, 0.168627,
	0, 1, 0.14902,
	0, 1, 0.129412,
	0, 1, 0.109804,
	0, 1, 0.0901961,
	0, 1, 0.0705882,
	0, 1, 0.0509804,
	0, 1, 0.0313726,
	0, 1, 0.0117647,
	0.00784314, 1, 0,
	0.027451, 1, 0,
	0.0470588, 1, 0,
	0.0666667, 1, 0,
	0.0862745, 1, 0,
	0.105882, 1, 0,
	0.12549, 1, 0,
	0.145098, 1, 0,
	0.164706, 1, 0,
	0.184314, 1, 0,
	0.2, 1, 0,
	0.219608, 1, 0,
	0.239216, 1, 0,
	0.258824, 1, 0,
	0.278431, 1, 0,
	0.298039, 1, 0,
	0.317647, 1, 0,
	0.337255, 1, 0,
	0.356863, 1, 0,
	0.376471, 1, 0,
	0.396078, 1, 0,
	0.415686, 1, 0,
	0.435294, 1, 0,
	0.454902, 1, 0,
	0.47451, 1, 0,
	0.494118, 1, 0,
	0.513726, 1, 0,
	0.533333, 1, 0,
	0.552941, 1, 0,
	0.572549, 1, 0,
	0.592157, 1, 0,
	0.611765, 1, 0,
	0.631373, 1, 0,
	0.65098, 1, 0,
	0.670588, 1, 0,
	0.690196, 1, 0,
	0.709804, 1, 0,
	0.729412, 1, 0,
	0.74902, 1, 0,
	0.768627, 1, 0,
	0.788235, 1, 0,
	0.807843, 1, 0,
	0.827451, 1, 0,
	0.847059, 1, 0,
	0.866667, 1, 0,
	0.886275, 1, 0,
	0.905882, 1, 0,
	0.92549, 1, 0,
	0.945098, 1, 0,
	0.964706, 1, 0,
	0.984314, 1, 0,
	1, 0.996078, 0,
	1, 0.976471, 0,
	1, 0.956863, 0,
	1, 0.937255, 0,
	1, 0.917647, 0,
	1, 0.898039, 0,
	1, 0.878431, 0,
	1, 0.858824, 0,
	1, 0.839216, 0,
	1, 0.819608, 0,
	1, 0.8, 0,
	1, 0.780392, 0,
	1, 0.760784, 0,
	1, 0.741176, 0,
	1, 0.721569, 0,
	1, 0.701961, 0,
	1, 0.682353, 0,
	1, 0.662745, 0,
	1, 0.643137, 0,
	1, 0.623529, 0,
	1, 0.603922, 0,
	1, 0.588235, 0,
	1, 0.568627, 0,
	1, 0.54902, 0,
	1, 0.529412, 0,
	1, 0.509804, 0,
	1, 0.490196, 0,
	1, 0.470588, 0,
	1, 0.45098, 0,
	1, 0.431373, 0,
	1, 0.411765, 0,
	1, 0.392157, 0,
	1, 0.372549, 0,
	1, 0.352941, 0,
	1, 0.333333, 0,
	1, 0.313726, 0,
	1, 0.294118, 0,
	1, 0.27451, 0,
	1, 0.254902, 0,
	1, 0.235294, 0,
	1, 0.215686, 0,
	1, 0.196078, 0,
	1, 0.176471, 0,
	1, 0.156863, 0,
	1, 0.137255, 0,
	1, 0.117647, 0,
	1, 0.0980392, 0,
	1, 0.0784314, 0,
	1, 0.0588235, 0,
	1, 0.0392157, 0,
	1, 0.0196078, 0,
	1, 0, 0
};

void main(void)
{

	//fragColor = getPhongShadedColor();
	//useCustomColorMap(fragWorldPosG.y);

	int mappedRow= int((fragWorldPosG.y / maxHeight) * 255);
	int startIndex = mappedRow * 3;
	fragColor = vec4(rainbow[startIndex], rainbow[startIndex+1], rainbow[startIndex+2], 1.0);


}

vec4 getPhongShadedColor()
{	
// Compute lighting. We assume lightPos and eyePos are in world
	// coordinates. fragWorldPos and fragWorldNor are the interpolated
	// coordinates by the rasterizer.
	/*
	vec3 L = normalize(lightPos - vec3(fragWorldPosG));
	vec3 V = normalize(eyePos - vec3(fragWorldPosG));
	vec3 H = normalize(L + V);
	vec3 N = normalize(fragWorldNorG);

	float NdotL = dot(N, L); // for diffuse component
	float NdotH = dot(N, H); // for specular component

	vec3 diffuseColor = I * kd * max(0, NdotL);
	vec3 specularColor = I * ks * pow(max(0, NdotH), 100);
	vec3 ambientColor = Iamb * ka;
	return vec4(diffuseColor + specularColor + ambientColor, 1);*/
	return vec4(0,0,0,0);
}

void useCustomColorMap(float height)
{
	if(height > 1.32f)
	{
		fragColor = vec4(0.4274f, 0.2470f, 0.1843f, 1.0);
	}
	else if(height > 0.9f)
	{
		fragColor = vec4(177/255.0, 114/255.0, 83/255.0, 1.0);
	}
	else if(height > 0.55f)
	{
		fragColor = vec4(240.0/255.0, 200/255.0, 190/255.0, 1.0);
	}
	else
	{
		fragColor = vec4(0.2, .2, .2, 1.0);
	}
}
